
\section{SECURITY DISCUSSION}
{\color{blue} All the three security goals are achieved with Intel TSX and LLVM as follows. Any attack that attempts to access the keys and sensitive intermediate states during
the protected computing phase automatically triggers the hardware abort handler,
clearing all sensitive information. If it commits successfully, the transactional execution
is guaranteed to be performed within L1D caches and always ends with clearing
all sensitive data.}

First, peapods have their own limitations.One limitation of Peapods is that it requires all user-mode executives must be recompiled by the modified LLVM we provide.This is conducive to the formation of a safe execution environment.It is difficult for an attacker to execute his own attack code, because it requires breaking the control flow integrity first.There are many effective control flow integrity protection implementation proposed, such as Cryptographic CFI, Forward Edge CFI, etc.Another limitation is that Peapods cannot protect libraries without source code.This problem could be solved when library developers apply Peapods to their closed-source libraries.


%²àÐÅµÀ dumpÄÚ´æ
When the computer undergoes a core dump, as the Peapods transaction is interrupted, the master key, plaintext sensitive information, and intermediate calculations that have already been calculated are all cleared.Therefore, the attacker still cannot obtain sensitive information in plaintext.

Attackers may also attack sensitive information through the side channel.Fortunately, Peapods is immune to cache-based time-side channel attacks because AES-NI itself is not subject to any known side-channel attacks and the sensitive information calculation is fully implemented in the cache.Peepods can't resist timing side channel attacks, but programmers can defend against the attacks by refactoring the code and adding blinding algorithm.

